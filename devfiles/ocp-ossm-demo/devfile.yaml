apiVersion: 1.0.0
metadata:
  generateName: ocp-servicemesh-demo-poc
projects:
  - name: ocp-servicemesh-demo-poc
    source:
      location: 'https://github.com/froberge/ocp-servicemesh-demo.git'
      type: github
components:
  - mountSources: true
    command:
      - tail
    args:
      - '-f'
      - /dev/null
    memoryLimit: 512Mi
    type: dockerimage
    volumes:
      - name: kubeconfig
        containerPath: /.kube
    alias: oc
    image: 'quay.io/openshift/origin-cli:4.8'
  - mountSources: true
    command:
      - tail
    args:
      - '-f'
      - /dev/null
    memoryLimit: 512Mi
    type: dockerimage
    volumes:
      - name: kubeconfig
        containerPath: /.kube
    alias: kustomize
    image: 'k8s.gcr.io/kustomize/kustomize:v3.8.7'
  - id: redhat/vscode-yaml/latest
    type: chePlugin
  - type: chePlugin
    id: redhat/quarkus-java11/latest
  - type: dockerimage
    alias: maven
    image: registry.redhat.io/codeready-workspaces/plugin-java11-rhel8@sha256:cff9e47f83c6140d442721ed4d78e029a55f98bdca8efffbba8513656a1b28a7
    env:
      - name: JAVA_OPTS
        value: -XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
          -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
          -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom
          -Duser.home=/home/jboss
      - name: MAVEN_OPTS
        value: $(JAVA_OPTS)
    memoryLimit: 512Mi
    mountSources: true
    volumes:
      - name: m2
        containerPath: /home/jboss/.m2
  - mountSources: true
    memoryLimit: 512Mi
    type: dockerimage
    volumes:
      - name: postgresql-data
        containerPath: /var/lib/postgresql/data
    alias: postgres-debit
    image: postgres
    env:
      - value: /tmp/pgdata
        name: PGDATA
      - value: demodb
        name: POSTGRES_USER
      - value: Demo1234
        name: POSTGRES_PASSWORD
      - value: cs_debit
        name: POSTGRES_DB
  - mountSources: true
    memoryLimit: 512Mi
    type: dockerimage
    volumes:
      - name: postgresql-data
        containerPath: /var/lib/postgresql/data
    alias: postgres-credit
    image: postgres
    env:
      - value: /tmp/pgdata
        name: PGDATA
      - value: demodb
        name: POSTGRES_USER
      - value: Demo1234
        name: POSTGRES_PASSWORD
      - value: cs_credit
        name: POSTGRES_DB
commands:        
  - name: psql-debit
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/ocp-servicemesh-demo-poc/dbscripts'
        type: exec
        command: psql -d shop -U shop -f create-debit-db.sql
        component: postgres-debit
  - name: psql-credit
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/ocp-servicemesh-demo-poc/dbscripts'
        type: exec
        command: psql -d shop -U shop -f create-credit-db.sql
        component: postgres-credit
